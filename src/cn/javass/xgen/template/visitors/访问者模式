1，访问者模式：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素
的类的前提下定义作用于这些元素的新操作。
2，访问者模式能给一系列对象，透明的添加新功能。从而避免在维护期间，对这一系列对象进
行修改，而且还能变相实现复用访问者所具有的功能。
3，访问者模式在实现的时候，通常都需要循环或是递归对象结构里面的所有对象，要保证每个
对象都要被访问到
4，访问者模式的accept方法和visit方法，构成一个调用的通路，从而使得新的功能能够通过一
这个通路添加到对象结构上
5，访问者模式实现的核心技术就是两次分发的技术，当客户端调用ObjectStructure的时候，
会遍历ObjectStructure中所有的元素，调用这些元素的accept方法，让这些元素来接受
访问，这是请求的第一次分发：在具体的元素对象中实现accpt方法的时候，会回调访问者
的visit方法，等于请求被第二次分发了，请求被分发给访问者来进行处理，真正实现功能的
正是访问都的visit方法。
6，通常不在Component中实现visit方法，因为不同的子类，visit方法返回实例是不一样的
7，在实现访问者模式的时候，要考虑让谁来负责遍历所有的元素对象，如果是集合结构，通
常就在Obstructure里面循环访问；如果是组合模式构成的对象树，通常就在组合对象的accept
方法里面，递归遍历它的子元素。

何时选用访问者模式：
1：如果想对一个对象结构，实施一些依赖于对象结构中的具体类的操作，可以使用访问者模式。
2：如果想对一个对象结构中的各个元素，进行很多不同的而且不相关的操作，为了避免这些操作
使得类变得杂乱，可以使用访问者模式，把这些操作分散到不同的访问者对象中去，每个访问者对象
实现同一类功能。
3，如果对象结构很少变动，但是需要经常给对象结构中的元素对象定义新的操作，可以使用访问者
模式。

首先要搞清楚谁是Vistor对象，谁是Element对象：每一个Vistor都要加Element中去【只在局部点中使用】
在DefaultTemplate类中的
//3：运行method获取到结果值
String methodValue = ""+callMethodVisitor(className,moduleConf);这里面使用访问者模式。

定义一个模板元素：TemplateElement与Visitor对象
注意：调用是DefaultTemplate中调用，其中VoPropertiesDesign是实现Visitor
---------------------------------------------------------------------------------------------------------------
它主要作用是：在Model.txt中有这个观察者对象：$[cn.javass.themes.simple.visitors.VoPropertiesDesign]
这个观察者对象的作用用来根据配置文件中的内容来生成属性如：<ExtendConfs>voFields/voFieldsTypes</ExtendConfs>
----------------------------------------------------------------------------------------------------------------






















